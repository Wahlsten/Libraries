classdef sbp_obj
    % SBP operators
    properties
        Pinv;
        D1;
        D2;
        acc;
        BS;
    end
    methods
        function obj = createOperators(obj, grid_obj)
            
            for k = 1:2
                
                N  = grid_obj.N(k);
                dx = grid_obj.d(k);
                
                if obj.acc==2
                    
                    V        = dx*[0.5 ones(1,N-1) 0.5];
                    obj.Pinv = sparse(diag(1./V));
                    
                    Q = full(0.5*sparse(diag([-1; zeros(N-1,1); 1]) ...
                        + diag(ones(N,1), 1) - diag(ones(N,1), -1)));
                    
                    obj.D1{k} = sparse(obj.Pinv{k} * Q);
                    obj.D2{k} = sparse(obj.D1{k} * obj.D1{k});
                    obj.BS{k} = obj.D1{k};
                    
                end
                
                if obj.acc==4
                    
                    obj.Pinv{k} = sparse((1/dx)*diag([48/17 48/59 48/43 48/49 ...
                        ones(1,N-7) 48/49 48/43 48/59 48/17]));
                    
                    diagQ = ones(N+1,1)*[1/12 -2/3 0 2/3 -1/12];
                    Q = sparse(spdiags(diagQ,[-2:2],N+1,N+1));
                    Q(1:4,1:4) = [-1/2 59/96 -1/12 -1/32;-59/96 0 59/96 0;...
                        1/12 -59/96 0 59/96; 1/32 0 -59/96 0];
                    Q(N-2:N+1,N-2:N+1) = -rot90(Q(1:4,1:4), 2); %Q(N-2:N+1,N-2:N+1) = -flipud(fliplr(Q(1:4,1:4)));
                    obj.D1{k} = sparse(obj.Pinv{k} * Q);
                    obj.D2{k} = sparse(obj.D1{k} * obj.D1{k});
                    obj.BS{k} = obj.D1{k};
                    
                end
                
                if obj.acc==6
                    
                    P = diag(ones(N+1,1),0);
                    P(1:6,1:6)=diag([13649/43200,12013/8640,2711/4320,5359/4320,7877/8640, ...
                        43801/43200]);
                    P(N+1-5:N+1,N+1-5:N+1)=fliplr(flipud(diag([13649/43200,12013/8640, ...
                        2711/4320,5359/4320,7877/8640,43801/43200])));
                    
                    P = dx*P;
                    obj.Pinv{k} = sparse(inv(P));
                    
                    % One free parameter x1
                    % One optimized value is x1=0.70127127127127 = 331/472
                    x1 = 0.70127127127127;
                    
                    obj.D1{k} = (1/60*diag(ones(N+1-3,1),3)-9/60*diag(ones(N+1-2,1),2)+45/60*diag(ones(N,1),1)-45/60*diag(ones(N,1),-1)+9/60*diag(ones(N+1-2,1),-2)-1/60*diag(ones(N+1-3,1),-3));
                    
                    obj.D1{k}(1:6,1:9)=[-21600/13649, 43200/13649*x1-7624/40947, -172800/13649*x1+ ...
                        715489/81894, 259200/13649*x1-187917/13649, -172800/13649* ...
                        x1+735635/81894, 43200/13649*x1-89387/40947, 0, 0, 0; ...
                        -8640/12013*x1+7624/180195, 0, 86400/12013*x1-57139/12013, ...
                        -172800/12013*x1+745733/72078, 129600/12013*x1-91715/12013, ...
                        -34560/12013*x1+240569/120130, 0, 0, 0; 17280/2711*x1-715489/162660, -43200/2711*x1+57139/5422, 0, 86400/2711*x1-176839/8133, -86400/2711*x1+242111/10844, 25920/2711*x1-182261/27110, 0, 0, 0; -25920/5359*x1+187917/53590, 86400/5359*x1-745733/64308, -86400/5359*x1+176839/16077, 0, 43200/5359*x1-165041/32154, -17280/5359*x1+710473/321540, 72/5359, 0, 0; 34560/7877*x1-147127/47262, -129600/7877*x1+91715/7877, 172800/7877*x1-242111/15754, -86400/7877*x1+165041/23631, 0, 8640/7877*x1, -1296/7877, 144/7877, 0; -43200/43801*x1+89387/131403, 172800/43801*x1-240569/87602, -259200/43801*x1+182261/43801, 172800/43801*x1-710473/262806, -43200/43801*x1, 0, 32400/43801, -6480/43801, 720/43801];
                    obj.D1{k}(N+1-5:N+1,N+1-8:N+1)=flipud( fliplr(-obj.D1{k}(1:6,1:9)));
                    obj.D1{k} = sparse(obj.D1{k}/dx);
                    
                    obj.D2{k} = sparse(obj.D1{k} * obj.D1{k});
                    obj.BS{k} = obj.D1{k};
                    
                end
                
                if obj.acc==8
                    
                    P = diag(ones(N+1,1),0);
                    P(1:8,1:8)=diag([1498139/5080320, 1107307/725760, 20761/80640, 1304999/725760, 299527/725760, 103097/80640, 670091/725760, 5127739/5080320]);
                    P(N+1-7:N+1,N+1-7:N+1)=fliplr(flipud(diag([1498139/5080320, 1107307/725760, 20761/80640, 1304999/725760, 299527/725760, 103097/80640, 670091/725760, 5127739/5080320])));
                    
                    P = dx*P;
                    obj.Pinv{k} = sparse(inv(P));
                    
                    r67 = 0.69789473684211;
                    r68 = -0.12052631578947;
                    r78 = 0.75868421052632;
                    
                    obj.D1{k} = -(1/280*diag(ones(N+1-4,1),4)-4/105*diag(ones(N+1-3,1),3)+1/5*diag(ones(N+1-2,1),2)-4/5*diag(ones(N,1),1)+4/5*diag(ones(N,1),-1)-1/5*diag(ones(N+1-2,1),-2)+4/105*diag(ones(N+1-3,1),-3)-1/280*diag(ones(N+1-4,1),-4));
                    obj.D1{k}(1:8,1:12)=[-2540160/1498139, -142642467/5992556+50803200/1498139*r78+5080320/1498139*r67+25401600/1498139*r68, 705710031/5992556-228614400/1498139*r78-25401600/1498139*r67-121927680/1498139*r68, -3577778591/17977668+381024000/1498139*r78+50803200/1498139*r67+228614400/1498139*r68, 203718909/1498139-254016000/1498139*r78-50803200/1498139*r67-203212800/1498139*r68, -32111205/5992556+25401600/1498139*r67+76204800/1498139*r68, -652789417/17977668+76204800/1498139*r78-5080320/1498139*r67, 74517981/5992556-25401600/1498139*r78-5080320/1498139*r68, 0, 0, 0, 0;142642467/31004596-7257600/1107307*r78-725760/1107307*r67-3628800/1107307*r68, 0, -141502371/2214614+91445760/1107307*r78+10886400/1107307*r67+50803200/1107307*r68, 159673719/1107307-203212800/1107307*r78-29030400/1107307*r67-127008000/1107307*r68, -1477714693/13287684+152409600/1107307*r78+32659200/1107307*r67+127008000/1107307*r68, 11652351/2214614-17418240/1107307*r67-50803200/1107307*r68, 36069450/1107307-50803200/1107307*r78+3628800/1107307*r67, -536324953/46506894+17418240/1107307*r78+3628800/1107307*r68, 0, 0, 0, 0;-18095129/134148+3628800/20761*r78+403200/20761*r67+1935360/20761*r68, 47167457/124566-10160640/20761*r78-1209600/20761*r67-5644800/20761*r68, 0, -120219461/124566+25401600/20761*r78+4032000/20761*r67+16934400/20761*r68, 249289259/249132-25401600/20761*r78-6048000/20761*r67-22579200/20761*r68, -2611503/41522+3628800/20761*r67+10160640/20761*r68, -7149666/20761+10160640/20761*r78-806400/20761*r67, 37199165/290654-3628800/20761*r78-806400/20761*r68, 0, 0, 0, 0;3577778591/109619916-54432000/1304999*r78-7257600/1304999*r67-32659200/1304999*r68, -159673719/1304999+203212800/1304999*r78+29030400/1304999*r67+127008000/1304999*r68, 360658383/2609998-228614400/1304999*r78-36288000/1304999*r67-152409600/1304999*r68, 0, -424854441/5219996+127008000/1304999*r78+36288000/1304999*r67+127008000/1304999*r68, 22885113/2609998-29030400/1304999*r67-76204800/1304999*r68, 158096578/3914997-76204800/1304999*r78+7257600/1304999*r67, -296462325/18269986+29030400/1304999*r78+7257600/1304999*r68, 0, 0, 0, 0;-203718909/2096689+36288000/299527*r78+7257600/299527*r67+29030400/299527*r68, 1477714693/3594324-152409600/299527*r78-32659200/299527*r67-127008000/299527*r68, -747867777/1198108+228614400/299527*r78+54432000/299527*r67+203212800/299527*r68, 424854441/1198108-127008000/299527*r78-36288000/299527*r67-127008000/299527*r68, 0, -17380335/1198108+10886400/299527*r67+25401600/299527*r68, -67080435/1198108+25401600/299527*r78-3628800/299527*r67, 657798011/25160268-10886400/299527*r78-3628800/299527*r68, -2592/299527, 0, 0, 0;1529105/1237164-403200/103097*r67-1209600/103097*r68, -3884117/618582+1935360/103097*r67+5644800/103097*r68, 2611503/206194-3628800/103097*r67-10160640/103097*r68, -7628371/618582+3225600/103097*r67+8467200/103097*r68, 5793445/1237164-1209600/103097*r67-2822400/103097*r68, 0, 80640/103097*r67, 80640/103097*r68, 3072/103097, -288/103097, 0, 0;93255631/8041092-10886400/670091*r78+725760/670091*r67, -36069450/670091+50803200/670091*r78-3628800/670091*r67, 64346994/670091-91445760/670091*r78+7257600/670091*r67, -158096578/2010273+76204800/670091*r78-7257600/670091*r67, 67080435/2680364-25401600/670091*r78+3628800/670091*r67, -725760/670091*r67, 0, 725760/670091*r78, -145152/670091, 27648/670091, -2592/670091, 0;-3921999/1079524+25401600/5127739*r78+5080320/5127739*r68, 536324953/30766434-121927680/5127739*r78-25401600/5127739*r68, -334792485/10255478+228614400/5127739*r78+50803200/5127739*r68, 296462325/10255478-203212800/5127739*r78-50803200/5127739*r68, -657798011/61532868+76204800/5127739*r78+25401600/5127739*r68, -5080320/5127739*r68, -5080320/5127739*r78, 0, 4064256/5127739, -1016064/5127739, 193536/5127739, -18144/5127739];
                    obj.D1{k}(N+1-7:N+1,N+1-11:N+1)=flipud( fliplr(-obj.D1(1:8,1:12)));
                    obj.D1{k} = sparse(obj.D1/dx);
                    
                    obj.D2{k} = sparse(obj.D1{k}*obj.D1{k});
                    obj.BS{k} = obj.D1{k};
                    
                end
            end
        end
    end
end
